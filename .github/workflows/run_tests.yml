name: Run tests

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_call:
  workflow_dispatch:

jobs:
  lint:
    runs-on: ubuntu-22.04
    steps:
      - name: "Fetch code"
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: "Set up python 3.13"
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
      - name: "Install pre-commit"
        run: pip install pre-commit
      - name: "Run linters"
        run: pre-commit run -a
  test:
    runs-on: ubuntu-22.04
    needs: lint
    steps:
      - name: Fetch code
        uses: actions/checkout@v4
        with:
          fetch-depth: '0'
      - name: "Set up python 3.13"
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"
          cache: "pip"
      - uses: Gr1N/setup-poetry@v8
      - name: "Configure poetry"
        run: python -m poetry config virtualenvs.in-project true
      - name: "Save poetry cache"
        uses: actions/cache@v3
        with:
            path: ./.venv
            key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
      - name: "Install dependencies"
        run: poetry install
      - name: "Install GDAL"
        run: sudo apt-get install binutils libproj-dev gdal-bin --no-install-suggests --no-install-recommends --yes
      - name: "Run tests"
        run: poetry run python manage.py test
